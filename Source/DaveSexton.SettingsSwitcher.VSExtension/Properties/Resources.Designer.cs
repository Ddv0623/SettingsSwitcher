//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DaveSexton.SettingsSwitcher.Vsix.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DaveSexton.SettingsSwitcher.Vsix.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting all code files in the solution may cause many files to be modified.
        ///
        ///This operation cannot be undone for files that are not currently opened..
        /// </summary>
        internal static string ConfirmFormatSolution {
            get {
                return ResourceManager.GetString("ConfirmFormatSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format all code files in the solution?.
        /// </summary>
        internal static string ConfirmFormatSolutionTitle {
            get {
                return ResourceManager.GetString("ConfirmFormatSolutionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting all code files in the solution may cause many files to be checked out from source control.
        ///
        ///This operation cannot be undone for files that are already checked out but are not currently opened..
        /// </summary>
        internal static string ConfirmFormatSourceControlledSolution {
            get {
                return ResourceManager.GetString("ConfirmFormatSourceControlledSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Current Settings.
        /// </summary>
        internal static string ExportCurrentSettingsDialogTitle {
            get {
                return ResourceManager.GetString("ExportCurrentSettingsDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The import feature of the dialog about to be shown is incompatible with the Settings Switcher tool bar.  Importing settings in the dialog will cause the selected settings in the tool bar to be out of sync with Visual Studio.  You can still use the dialog to exclude particular settings during import or export, at the cost of losing synchronization in the tool bar.
        ///
        ///To import all settings safely, select the settings that you want in the tool bar&apos;s drop-down list.
        ///
        ///To export all settings safely, click the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImportAndExportCommandIsIncompatible {
            get {
                return ResourceManager.GetString("ImportAndExportCommandIsIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatibility Warning.
        /// </summary>
        internal static string ImportAndExportCommandIsIncompatibleTitle {
            get {
                return ResourceManager.GetString("ImportAndExportCommandIsIncompatibleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual Studio Settings Files.
        /// </summary>
        internal static string SettingsFilesGroupName {
            get {
                return ResourceManager.GetString("SettingsFilesGroupName", resourceCulture);
            }
        }
    }
}
